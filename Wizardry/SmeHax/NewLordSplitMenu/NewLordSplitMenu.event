//Very largely based on Stan's work with the lord split menu in the past
//Extended to allow for a handful of additional features + the passing of command lists via memory slot

#include "NewLordSplitMenu.lyn.event"

//ID links for various menu-related flags



#define EventMenuCommand(textId) "WORD 0; SHORT textId 0; WORD 0; POIN (0x04F448+1); WORD 0; POIN (prEventMenuCommandEffect|1); WORD 0 0 0"
#define EventMenuCommandEnd "WORD 0 0 0 0 0 0 0 0 0"
#define EventMenuCommand(textID,usabilityFunc,effectFunc) "WORD 0; SHORT textID 0; WORD 0; POIN usabilityFunc; WORD 0; POIN effectFunc; WORD 0 0 0"
//in addition, the normal MenuCommand(name,desc,colour,usability,effect) macro work here

/*
	
ALIGN 4
	MyMenu:
	BYTE 4 4 22 0           // Geometry, order: X, Y, Width, Height (Height doesn't matter)
	WORD 3                  // style (change it if u want)
	POIN MyMenu_Commands // Command Definitions
	WORD 0 0 0 0 0 0        // No routines to handle B press/R press/construction/etc

ALIGN 4
	HubMenuPage1_Commands:
		EventMenuCommand()
	EventMenuCommandEnd
*/


ALIGN 4
	StartHubMenu:
	BYTE 4 4 22 0
	WORD 3
	POIN StartHubMenu_Commands
	WORD 0 0 0 0 0 0

ALIGN 4
	StartHubMenu_Commands:
	EventMenuCommand(StartHubFelisRouteText,FelisRouteCommandUsability,prEventMenuCommandEffect)
	EventMenuCommand(StartHubWynRouteText,WynRouteCommandUsability,prEventMenuCommandEffect)
	EventMenuCommand(StartHubAlmarRouteText,AlmarRouteCommandUsability,prEventMenuCommandEffect)
	EventMenuCommandEnd

#include "StartHubMenuUsabilityFuncs.lyn.event"

ALIGN 4
FelisRouteCompleteFlagLink:
SHORT FelisRouteCompleteFlag

ALIGN 4
WynRouteCompleteFlagLink:
SHORT WynRouteCompleteFlag

ALIGN 4
AlmarRouteCompleteFlagLink:
SHORT AlmarRouteCompleteFlag
